- name: Install MySql server
  ansible.builtin.apt:
    name: mysql-server

- name: Install python3-pymysql
  ansible.builtin.apt:
    name: python3-pymysql

- name: copy override.cnf to mysql conf
  ansible.builtin.template:
    src: override.cnf.j2
    dest: /etc/mysql/mysql.conf.d/override.cnf
    mode: 0644
  notify: restart mysql

- name: MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock

- name: Add MySql user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    host: "%"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    priv: "{{ mysql_database }}.*:ALL"
  no_log: true

- name: Ensure that MySql server is started and enabled
  ansible.builtin.service:
    name: mysql
    state: started
    enabled: true

- name: Create directory /home/backup/mysql owned by user backup
  ansible.builtin.file:
    path: /home/backup/mysql
    state: directory
    owner: backup
    group: backup
    mode: 0750

- name: Create MySQL baskup user
  community.mysql.mysql_user:
    name: "{{ mysql_backup_user }}"
    password: "{{ mysql_backup_user_password }}"
    priv: "{{ mysql_database }}.*:LOCK TABLES,SELECT"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Create MqSQL user for replication
  community.mysql.mysql_user:
    name: "{{ mysql_replication_user }}"
    password: "{{ mysql_replication_user_password }}"
    host: "%"
    priv: "*.*:REPLICATION SLAVE"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  no_log: true

- name: Copy my.cnf to /home/backup/.my.conf
  ansible.builtin.template:
    src: backup.cnf.j2
    dest: /home/backup/.my.cnf
    owner: backup
    group: backup
    mode: 0400
  notify: restart mysql

- name: Copy Crontab file  to /etc/cron.d/mysql-backup
  ansible.builtin.template:
    src: mysql-backup.j2
    dest: /etc/cron.d/mysql-backup

- name: Set one MySQL to read only mode
  community.mysql.mysql_variables:
    variable: read_only
    value: "{{ 'OFF' if inventory_hostname == mysql_host else 'ON' }}"
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica
 


